import numpy as np
from PIL import ImageGrab
import cv2
import pytesseract
import pyautogui
import discord
import asyncio

client = discord.Client()

# setting up OCR
pytesseract.pytesseract.tesseract_cmd = "C:\Program Files (x86)\Tesseract-OCR\\tesseract.exe"

raid_bot_channel = '523379912036450316'

@client.event
async def on_message(message):
    # we do not want the bot to reply to itself
    if message.author == client.user:
        return

    if message.content == '!antiraid':
        await client.send_message(message.channel, 'Rust Anti-Raid Bot version 1.0.\n"!antiraid-help" for list of commands.')
    elif message.content == '!antiraid-help':
        embed = discord.Embed(title="Anti-Raid Commands", color=0xff0000)
        embed.add_field(name="!antiraid", value="Returns current version", inline=False)
        embed.add_field(name="!antiraid-help", value="Returns list of commands", inline=False)
        embed.add_field(name="!antiraid-channel", value="Changes notification channel to current channel", inline=False)
        embed.add_field(name="!antiraid-start", value="Starts Rust Anti-Raid Bot", inline=False)
        embed.add_field(name="!antiraid-screenshot", value="Takes a screenshot", inline=False)
        await client.send_message(message.channel, embed=embed)
    elif message.content == '!antiraid-channel':
        await client.send_message(message.channel, 'Successfully changed notification channel to #' + str(message.channel))
        global raid_bot_channel
        raid_bot_channel = message.channel.id
    elif message.content == '!antiraid-start':
        await client.send_message(message.channel, 'Successfully started Rust Anti-Raid Bot')
        client.loop.create_task(main())
    elif message.content == '!antiraid-screenshot':
        screenshot = ImageGrab.grab()
        screenshot.save('screenshot.png')
        await client.send_file(message.channel, 'screenshot.png')

# sending message to discord
async def raid(message, channel):
    await client.send_message(client.get_channel(channel), message)

# checking if image text = 'respawn' with OCR
def process_img(grey_img):
    txt = pytesseract.image_to_string(grey_img)
    if txt == "Respawn":
        return True
    return False

# start rust anti-raid bot
async def main():
    await client.wait_until_ready()

    food_counter = 0

    while True:
        # processing image to convert to different format, make it more readable for OCR and display the image
        img = ImageGrab.grab(bbox=(1490, 935, 1600, 970))
        img = np.array(img)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        cv2.imshow('window', img)

        # if image text = 'respawn' call raid() function and end script
        if process_img(img):
            client.loop.create_task(raid("You're being raided!", raid_bot_channel))
            cv2.destroyAllWindows()
            break

        # end script if 'q' is pressed in cv2 window
        if cv2.waitKey(25) & 0xFF == ord('q'):
            cv2.destroyAllWindows()
            break

        food_counter += 1
        if food_counter == 720:
            pyautogui.keyDown('6')
            pyautogui.keyUp('6')
            food_counter = 0

        asyncio.sleep(5)

client.run('insert token here')
